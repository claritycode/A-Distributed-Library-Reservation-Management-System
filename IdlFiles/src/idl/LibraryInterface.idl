// To generate files, go to "src" folder and run command "idlj -fall idl/LibraryInterface.idl".
module DRMSServices {
	struct lateStudent {
			string firstName ;
			string lastName ;
			string phoneNumber ;
	} ;
	
	struct nonReturners {
		string universityName ;
		sequence<lateStudent> studentList ;
	} ;
	
	interface LibraryInterface {
		typedef sequence<nonReturners> result ;
		
		/**
		 * When a student invokes this method through a client program called StudentClient, the server associated with the
		 * educational institution attempts to create an account with the information passed if the username does not exist.
		 * 
		 * @param firstName
		 * @param lastName
		 * @param emailAddress
		 * @param phoneNumber
		 * @param username
		 * @param password
		 * @param educationalInstitution
		 * @return true if account was created on replica.
		 */
		boolean createAccount ( in string firstName, in string lastName, in string email, in string phoneNumber, in string username, in string password, in string educationalInstitute ) ;
		
		/**
		 * Attempts to find if the book exist (quantity should be greater than 0 to successfully reserve). If it does, then 
		 * the corresponding quantity is decremented and the book is updated to the reserved book list of the student. The 
		 * duration is set to 14 days by default.
		 * 
		 * @param username
		 * @param password
		 * @param bookName
		 * @param authorName
		 * @return true if book was successfully reserved. 
		 */
		boolean reserveBook ( in string username, in string password, in string bookName, in string authorName ) ;
	
		/**
		 * Similar to {@link #reserveBook(string username, string password, string bookName, string authorName)}, but tries 
		 * to reserve the book in any of the libraries in the system.
		 * 
		 * @param username
		 * @param password
		 * @param bookName
		 * @param authorName
		 * @return true if book was successfully reserved. 
		 */
		boolean reserveInterLibrary ( in string username, in string password, in string bookName, in string authorName ) ;
	
		/**
		 * Lists all the students’ First Name, Last Name and Phone Number who have not returned the books with “NumDays” past 
		 * their loan date in all the three educational institutions.
		 * 
		 * @param adminUsername
		 * @param adminPassword
		 * @param educationalInstitution
		 * @param numDays
		 * @return
		 */
		result getNonReturners ( in string username, in string password, in string educationalInstitute, in long days ) ;
	
		/**
		 * Set the duration of the reservation of a book.
		 * @param username the student username
		 * @param bookName the booke reserved by the student
		 * @param days the number of days the reservations will be set to
		 * @return true if operation is successful.
		 */
		boolean setDuration ( in string username, in string bookName, in string authorName, in long days ) ;
		
		/**
		 * Shut down library and releases udp port.
		 */
		void shutDown();
		
		/**
		 * Set udpPort of the replica.
		 * @param port The replica udp port.
		 */
		void setUdpPort(in long port);
		
		/**
		 * set byzantine flag to say if replica with give wrong responses.
		 * @param byzantineFlag True if replica should generate software errors.
		 */
		void setByzantineFlag(in boolean byzantineFlag);
	 
	} ;
};
