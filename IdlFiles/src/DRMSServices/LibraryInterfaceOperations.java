package DRMSServices;


/**
* DRMSServices/LibraryInterfaceOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from idl/LibraryInterface.idl
* Sunday, November 30, 2014 5:55:36 PM EST
*/

public interface LibraryInterfaceOperations 
{

  /**
  		 * When a student invokes this method through a client program called StudentClient, the server associated with the
  		 * educational institution attempts to create an account with the information passed if the username does not exist.
  		 * 
  		 * @param firstName
  		 * @param lastName
  		 * @param emailAddress
  		 * @param phoneNumber
  		 * @param username
  		 * @param password
  		 * @param educationalInstitution
  		 * @return true if account was created on replica.
  		 */
  boolean createAccount (String firstName, String lastName, String email, String phoneNumber, String username, String password, String educationalInstitute);

  /**
  		 * Attempts to find if the book exist (quantity should be greater than 0 to successfully reserve). If it does, then 
  		 * the corresponding quantity is decremented and the book is updated to the reserved book list of the student. The 
  		 * duration is set to 14 days by default.
  		 * 
  		 * @param username
  		 * @param password
  		 * @param bookName
  		 * @param authorName
  		 * @return true if book was successfully reserved. 
  		 */
  boolean reserveBook (String username, String password, String bookName, String authorName);

  /**
  		 * Similar to {@link #reserveBook(string username, string password, string bookName, string authorName)}, but tries 
  		 * to reserve the book in any of the libraries in the system.
  		 * 
  		 * @param username
  		 * @param password
  		 * @param bookName
  		 * @param authorName
  		 * @return true if book was successfully reserved. 
  		 */
  boolean reserveInterLibrary (String username, String password, String bookName, String authorName);

  /**
  		 * Lists all the students First Name, Last Name and Phone Number who have not returned the books with NumDays past 
  		 * their loan date in all the three educational institutions.
  		 * 
  		 * @param adminUsername
  		 * @param adminPassword
  		 * @param educationalInstitution
  		 * @param numDays
  		 * @return
  		 */
  DRMSServices.nonReturners[] getNonReturners (String username, String password, String educationalInstitute, int days);

  /**
  		 * Set the duration of the reservation of a book.
  		 * @param username the student username
  		 * @param bookName the book reserved by the student
  		 * @param days the number of days the reservations will be set to
  		 * @return true if operation is successful.
  		 */
  boolean setDuration (String username, String bookName, int days);

  /**
  		 * Shut down library and releases udp port.
  		 */
  void shutDown ();

  /**
  		 * Set byzantine flag to say if replica will give wrong responses.
  		 * @param byzantineFlag True if replica should generate software errors.
  		 */
  void setByzantineFlag (boolean byzantineFlag);
} // interface LibraryInterfaceOperations
