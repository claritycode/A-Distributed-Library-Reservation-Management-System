package idl;


/**
* idl/_LibraryStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from idl/ReplicaManager.idl
* Wednesday, November 26, 2014 10:37:55 PM EST
*/

public class _LibraryStub extends org.omg.CORBA.portable.ObjectImpl implements idl.Library
{

  public String createAccount (String firstName, String lastName, String emailAddress, String phoneNumber, String username, String password, String educationalInstitution)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createAccount", true);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_string (emailAddress);
                $out.write_string (phoneNumber);
                $out.write_string (username);
                $out.write_string (password);
                $out.write_string (educationalInstitution);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createAccount (firstName, lastName, emailAddress, phoneNumber, username, password, educationalInstitution        );
            } finally {
                _releaseReply ($in);
            }
  } // createAccount

  public String reserveBook (String username, String password, String bookName, String authorName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("reserveBook", true);
                $out.write_string (username);
                $out.write_string (password);
                $out.write_string (bookName);
                $out.write_string (authorName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return reserveBook (username, password, bookName, authorName        );
            } finally {
                _releaseReply ($in);
            }
  } // reserveBook

  public String reserveInterLibrary (String username, String password, String bookName, String authorName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("reserveInterLibrary", true);
                $out.write_string (username);
                $out.write_string (password);
                $out.write_string (bookName);
                $out.write_string (authorName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return reserveInterLibrary (username, password, bookName, authorName        );
            } finally {
                _releaseReply ($in);
            }
  } // reserveInterLibrary

  public String getNonRetuners (String adminUsername, String adminPassword, String educationalInstitution, int numDays)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getNonRetuners", true);
                $out.write_string (adminUsername);
                $out.write_string (adminPassword);
                $out.write_string (educationalInstitution);
                $out.write_long (numDays);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getNonRetuners (adminUsername, adminPassword, educationalInstitution, numDays        );
            } finally {
                _releaseReply ($in);
            }
  } // getNonRetuners

  public String setDuration (String username, String bookName, int num_of_days)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setDuration", true);
                $out.write_string (username);
                $out.write_string (bookName);
                $out.write_long (num_of_days);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return setDuration (username, bookName, num_of_days        );
            } finally {
                _releaseReply ($in);
            }
  } // setDuration

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:idl/Library:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LibraryStub
